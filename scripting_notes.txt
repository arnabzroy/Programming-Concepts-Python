Find the shell type
-----------------------

ps | grep $$
20606 pts/54   00:00:00 bash

[sandeep@sbaldawa-dev]$ which bash
/bin/bash

Preserve whitespace while printing?
------------------------------------

Encapsulating the variable name with "" will preserve any white space values
greeting='Hello        world!'
echo $greeting" now with spaces: $greeting"

Passing Arguments to the Script
---------------------------------
./bin/my_shopping.sh apple 5 banana 8 "Fruit Basket" 15

echo $3 --> results with: banana

BIG=$5

echo "A $BIG costs just $6" --> results with: A Fruit Basket costs just 15

$# =>  holds the number of arguments passed to the script
echo $# --> results with: 6

Arrays
------
An array can hold several values under one name. Array naming is the same as variables naming. An array is initialized by assign space-delimited values enclosed in ()

my_array=(apple banana "Fruit Basket" orange)
new_array[2]=apricot


Array members need not be consecutive or contiguous. Some members of the array can be left uninitialized.

The total number of elements in the array is referenced by ${#arrayname[@]}

my_array=(apple banana "Fruit Basket" orange)
echo  ${#my_array[@]}                   # 4


The array elements can be accessed with their numeric index. The index of the first element is 0.

my_array=(apple banana "Fruit Basket" orange)
echo ${my_array[3]}                     # orange - note that curly brackets are needed
# adding another array element
my_array[4]="carrot"                    # value assignment without a $ and curly brackets
echo ${#my_array[@]}                    # 5
echo ${my_array[${#my_array[@]}-1]}     # carrot

