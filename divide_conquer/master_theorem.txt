Binary Search
-------------
Recurrance :- T(N) = T(N/2) + O(1)
Complexity :- T(N) = O(logN)

Naive Polynominal
------------------
Recurrance :- T(N) = 4T(N/2) + O(N)
Complexity :- T(N) = O(N^2)

Fast Kasturba Polynominal
-------------------------
Recurrance :- T(N) = 3T(N/2) + O(N)
Complexity :- T(N) = O(N^(log3/log2))

Merge Sort
-----------
Recurrance :- T(N) = 2T(N/2) + O(N)
Complexity :- T(N) = O(NlogN)

         -----------
        |  Generic | 
         -----------
   T(N) = aT(Ceiling(a/b)) + O(n^d)
   
   T(N) = O(n^d)            if d > log a/log b
   T(N) = O(n^d logn)       if d == log a/log b 
   T(N) = O(n^(loga/logb))  if d < log a/log b
   
 
 
