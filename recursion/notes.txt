http://yefangliang.com/2015/10/16/leetcode-294-flip-game-ii/
https://see.stanford.edu/materials/icspacs106b/H19-RecBacktrackExamples.pdf
http://www.kosbie.net/cmu/fall-11/15-112/handouts/optional-notes-combinatorial-iterators.html

Permutations and Subsets are about choice
Width of branching represents number of options available for each decision

Exhaustive recursion
-----------------------
Explore all possible outcomes at every decision point
Pemutation => N!
Subsets => 2^N

Partial exploration of exhaustive space
----------------------------------------
Stop at some satisfactory outcome


Backtracking
--------------------
bool Solve(configuration conf) {
     if (no more choices) // BASE CASE
         return (conf is goal state);
     
     for (all available choices) {
         try one choice c;
         
        // recursively solve after making choice
        ok = Solve(conf with choice c made);
       
        if (ok)
            return true;
        else
            unmake choice c;
     }
   return 
}

Pegion Hole principal
----------------------
In mathematics, the pigeonhole principle states that if n items are put into m containers, with n > m, then at least one container must contain more than one item.[1] This theorem is exemplified in real-life by truisms like "there must be at least two left gloves or two right gloves in a group of three gloves"

https://en.wikipedia.org/wiki/Pigeonhole_principle
