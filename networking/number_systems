Unary => "0"
Binary => "0,1"
Octa => "0..7"
Hexas = "0..9" & "A..F"

In binary
=========

2^10 = 1024 => Kilobytes
2^20 => Megabytes
2^30 => Gigabytes
2^40 => Terabytes

1 bit  => "0"
2 bits => "00 01 10 11"
3 bits => "000 001 ...111"
1st  2nd 3rd
0    0   0
0    0   1
0    1   0
0    1   1
1    0   0 
1    0   1
1    1   0
1    1   1

In the above if we take 1st bit, it divides entire range in two parts
In the above if we take 2nd bit, it divides entire range in four parts
In the above if we take 3rd bit, it divides entire range in eight parts
2 ^ 1 = 2
2 ^ 2 = 4
2 ^ 3 = 8

If we take n bits we will have 2 ^ n numbers which can be represented
Let's say we choose a partition of "K" we will have 2 ^ K parts
So we have 2 ^K parts which have 2 ^ n numbers
Hence size of each part is 2 ^ n / 2 ^ k = 2 ^ (n-k)
 ------------------------------------------------
|       K              |         n - k           |
|                      |                         | 
 ------------------------------------------------
 
 In networking
 =============
 With K bits we have 2 ^ K network ids (or number of networks)
 and 2 ^ (n-K) hosts in each network   (or size of each network)

In OS
=====
"n" bits are the address
"k" bits are the block offset
"n-k" bits are the block address in that block offset
